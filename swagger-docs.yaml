openapi: 3.1.0
info:
  title: Pest and Disease Management
  version: 0.1.0
paths:
  /api/v1/login/access-token/:
    post:
      tags:
        - login
      summary: Login Access Token
      description: OAuth2 compatible token login, get an access token for future requests
      operationId: login_access_token_api_v1_login_access_token__post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/Body_login_access_token_api_v1_login_access_token__post
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/user/register/:
    post:
      tags:
        - user
      summary: Register
      description: Registration API for the service.
      operationId: register_api_v1_user_register__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/user/me/:
    get:
      tags:
        - user
      summary: Get Me
      description: Returns user email
      operationId: get_me_api_v1_user_me__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMe'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/data/:
    get:
      tags:
        - data
      summary: Get All Data
      description: |-
        This API returns all weather data present in the db.

        WARNING: WILL BE SLOWER AS MORE DATA IS ACCRUED OVER TIME
      operationId: get_all_data_api_v1_data__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListData'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/data/parcel/{parcel_id}/from/{start}/to/{end}:
    get:
      tags:
        - data
      summary: Get Data For Parcel
      description: This API returns weather data for a date interval, for some parcel
      operationId: >-
        get_data_for_parcel_api_v1_data_parcel__parcel_id__from__start__to__end__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: parcel_id
          in: path
          required: true
          schema:
            type: integer
            title: Parcel Id
        - name: start
          in: path
          required: true
          schema:
            type: string
            format: date
            title: Start
        - name: end
          in: path
          required: true
          schema:
            type: string
            format: date
            title: End
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListData'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/data/{parcel_id}:
    post:
      tags:
        - data
      summary: Upload Weather Data For Parcel
      description: |-
        Manually upload one or more weather data points.

        Elements contain:
        [
            "date", "time", "parcel_location", "atmospheric_temperature", "atmospheric_temperature_daily_min",
            "atmospheric_temperature_daily_max", "atmospheric_temperature_daily_average", "atmospheric_relative_humidity",
            "atmospheric_pressure", "precipitation", "average_wind_speed", "wind_direction", "wind_gust",
            "leaf_relative_humidity", "leaf_temperature", "leaf_wetness",
            "soil_temperature_10cm", "soil_temperature_20cm", "soil_temperature_30cm", "soil_temperature_40cm",
            "soil_temperature_50cm", "soil_temperature_60cm", "solar_irradiance_copernicus"
        ]

        date and time are mandatory fields.

        date format: %Y-%m-%d
        time format: %H:%M:%S
      operationId: upload_weather_data_for_parcel_api_v1_data__parcel_id__post
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: parcel_id
          in: path
          required: true
          schema:
            type: integer
            title: Parcel Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateData'
              title: Data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/data/{data_id}:
    delete:
      tags:
        - data
      summary: Remove Data Point
      description: Remove a single weather datapoint
      operationId: remove_data_point_api_v1_data__data_id__delete
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: data_id
          in: path
          required: true
          schema:
            type: integer
            title: Data Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/rule/:
    get:
      tags:
        - rule
      summary: Get All Rules
      description: Returns all stored rules.
      operationId: get_all_rules_api_v1_rule__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesDB'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - rule
      summary: Create Rule
      description: >-
        Create a rule such as: temperature > 50 AND air_pressure < 20 AND
        humidity < 50 and assign it to a pest model
      operationId: create_rule_api_v1_rule__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRuleWithConditions'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/rule/{rule_id}:
    delete:
      tags:
        - rule
      summary: Delete Rule
      description: Delete a rule
      operationId: delete_rule_api_v1_rule__rule_id__delete
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            type: integer
            title: Rule Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/unit/:
    get:
      tags:
        - unit
      summary: Get Units
      description: Returns a list of symbols that are currently available in the system
      operationId: get_units_api_v1_unit__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Units'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - unit
      summary: Create Unit
      description: Creates a user defined unit
      operationId: create_unit_api_v1_unit__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - unit
      summary: Delete Unit
      description: Delete a unit
      operationId: delete_unit_api_v1_unit__delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitDelete'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/operator/:
    get:
      tags:
        - operator
      summary: Get All Operators
      description: Returns all operators that can be used.
      operationId: get_all_operators_api_v1_operator__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operators'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/tool/calculate-risk-index/weather/{parcel_id}/model/{model_ids}/verbose/{from_date}/from/{to_date}/to/:
    get:
      tags:
        - tool
      summary: Calculate Risk Index Verbose
      description: >-
        Calculates the risk index for some parcel x, a period of time (i.e.
        2025-01-01 -> 2025-01-31) and a pest model.
      operationId: >-
        calculate_risk_index_verbose_api_v1_tool_calculate_risk_index_weather__parcel_id__model__model_ids__verbose__from_date__from__to_date__to__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
            format: date
            title: From Date
        - name: to_date
          in: path
          required: true
          schema:
            type: string
            format: date
            title: To Date
        - name: parcel_id
          in: path
          required: true
          schema:
            type: integer
            title: Parcel Id
        - name: model_ids
          in: path
          required: true
          schema:
            type: string
            title: Model Ids
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/tool/calculate-risk-index/weather/{parcel_id}/model/{model_ids}/high/{from_date}/from/{to_date}/to/:
    get:
      tags:
        - tool
      summary: Calculate Risk Index High
      description: >-
        Calculates the risk index for some parcel x, a period of time (i.e.
        2025-01-01 -> 2025-01-31) and a pest model.


        This API only returns "High" risk datapoints
      operationId: >-
        calculate_risk_index_high_api_v1_tool_calculate_risk_index_weather__parcel_id__model__model_ids__high__from_date__from__to_date__to__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
            format: date
            title: From Date
        - name: to_date
          in: path
          required: true
          schema:
            type: string
            format: date
            title: To Date
        - name: parcel_id
          in: path
          required: true
          schema:
            type: integer
            title: Parcel Id
        - name: model_ids
          in: path
          required: true
          schema:
            type: string
            title: Model Ids
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/tool/calculate-gdd/parcel/{parcel_id}/model/{model_ids}/verbose/{from_date}/from/{to_date}/to/:
    get:
      tags:
        - tool
      summary: Calculate Gdd
      description: Calculates and returns GDD for pest in parcel and date interval
      operationId: >-
        calculate_gdd_api_v1_tool_calculate_gdd_parcel__parcel_id__model__model_ids__verbose__from_date__from__to_date__to__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: from_date
          in: path
          required: true
          schema:
            type: string
            format: date
            title: From Date
        - name: to_date
          in: path
          required: true
          schema:
            type: string
            format: date
            title: To Date
        - name: parcel_id
          in: path
          required: true
          schema:
            type: integer
            title: Parcel Id
        - name: model_ids
          in: path
          required: true
          schema:
            type: string
            title: Model Ids
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GDDResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/pest-model/:
    get:
      tags:
        - pest-model
      summary: Get Pest Models
      description: Returns all pest models
      operationId: get_pest_models_api_v1_pest_model__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PestModels'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - pest-model
      summary: Create Pest Model
      description: Create a base pest model
      operationId: create_pest_model_api_v1_pest_model__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePestModel'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PestModelDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/pest-model/upload-excel/:
    post:
      tags:
        - pest-model
      summary: Upload Pest Model
      description: Upload pest models via a definition file (excel)
      operationId: upload_pest_model_api_v1_pest_model_upload_excel__post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/Body_upload_pest_model_api_v1_pest_model_upload_excel__post
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/parcel/:
    get:
      tags:
        - parcel
      summary: Get All Parcels
      description: Returns a list of all parcels present in the system
      operationId: get_all_parcels_api_v1_parcel__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcels'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - parcel
      summary: Upload Parcel Lat Lon
      description: >-
        Upload a set of latitude and longitude values, that represent a parcel
        location
      operationId: upload_parcel_lat_lon_api_v1_parcel__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateParcel'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/parcel/wkt-format/:
    post:
      tags:
        - parcel
      summary: Upload Parcel Wkt
      description: >-
        Upload a WKT polygon, that represents a parcel location (latitude,
        longitude)


        Example: POLYGON ((25.2 16.2, 16.2 16.15, 17.2 15.2, 20.1 20.1, 25.2
        16.2))
      operationId: upload_parcel_wkt_api_v1_parcel_wkt_format__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelWKT'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/parcel/{parcel_id}:
    delete:
      tags:
        - parcel
      summary: Delete Parcel By Id
      description: Removes a parcel from the system via ID
      operationId: delete_parcel_by_id_api_v1_parcel__parcel_id__delete
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: parcel_id
          in: path
          required: true
          schema:
            type: integer
            title: Parcel Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/disease/:
    get:
      tags:
        - disease
      summary: Get All Diseases
      description: Returns a list of all diseases
      operationId: get_all_diseases_api_v1_disease__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDisease'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - disease
      summary: Create Disease
      description: Create a new disease
      operationId: create_disease_api_v1_disease__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputDisease'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/v1/disease/{disease_name}:
    get:
      tags:
        - disease
      summary: Get By Name
      description: Returns a disease by name, if it exists
      operationId: get_by_name_api_v1_disease__disease_name__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: disease_name
          in: path
          required: true
          schema:
            type: string
            title: Disease Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/disease/{disease_id}:
    delete:
      tags:
        - disease
      summary: Remove Disease
      description: Remove a disease by ID
      operationId: remove_disease_api_v1_disease__disease_id__delete
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: disease_id
          in: path
          required: true
          schema:
            type: string
            format: uuid4
            title: Disease Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Body_login_access_token_api_v1_login_access_token__post:
      properties:
        grant_type:
          anyOf:
            - type: string
              pattern: password
            - type: 'null'
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Secret
      type: object
      required:
        - username
        - password
      title: Body_login_access_token_api_v1_login_access_token__post
    Body_upload_pest_model_api_v1_pest_model_upload_excel__post:
      properties:
        excel_file:
          type: string
          format: binary
          title: Excel File
      type: object
      required:
        - excel_file
      title: Body_upload_pest_model_api_v1_pest_model_upload_excel__post
    Condition:
      properties:
        unit_id:
          type: integer
          title: Unit Id
        operator_id:
          type: integer
          title: Operator Id
        value:
          type: number
          title: Value
      type: object
      required:
        - unit_id
        - operator_id
        - value
      title: Condition
    CreateData:
      properties:
        date:
          type: string
          format: date
          title: Date
        time:
          type: string
          format: time
          title: Time
        atmospheric_temperature:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Temperature
        atmospheric_temperature_daily_min:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Temperature Daily Min
        atmospheric_temperature_daily_max:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Temperature Daily Max
        atmospheric_temperature_daily_average:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Temperature Daily Average
        atmospheric_relative_humidity:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Relative Humidity
        atmospheric_pressure:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Pressure
        precipitation:
          anyOf:
            - type: number
            - type: 'null'
          title: Precipitation
        average_wind_speed:
          anyOf:
            - type: number
            - type: 'null'
          title: Average Wind Speed
        wind_direction:
          anyOf:
            - type: string
            - type: 'null'
          title: Wind Direction
        wind_gust:
          anyOf:
            - type: number
            - type: 'null'
          title: Wind Gust
        leaf_relative_humidity:
          anyOf:
            - type: number
            - type: 'null'
          title: Leaf Relative Humidity
        leaf_temperature:
          anyOf:
            - type: number
            - type: 'null'
          title: Leaf Temperature
        leaf_wetness:
          anyOf:
            - type: number
            - type: 'null'
          title: Leaf Wetness
        soil_temperature_10cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 10Cm
        soil_temperature_20cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 20Cm
        soil_temperature_30cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 30Cm
        soil_temperature_40cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 40Cm
        soil_temperature_50cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 50Cm
        soil_temperature_60cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 60Cm
        solar_irradiance_copernicus:
          anyOf:
            - type: number
            - type: 'null'
          title: Solar Irradiance Copernicus
      type: object
      required:
        - date
        - time
        - atmospheric_temperature
        - atmospheric_temperature_daily_min
        - atmospheric_temperature_daily_max
        - atmospheric_temperature_daily_average
        - atmospheric_relative_humidity
        - atmospheric_pressure
        - precipitation
        - average_wind_speed
        - wind_direction
        - wind_gust
        - leaf_relative_humidity
        - leaf_temperature
        - leaf_wetness
        - soil_temperature_10cm
        - soil_temperature_20cm
        - soil_temperature_30cm
        - soil_temperature_40cm
        - soil_temperature_50cm
        - soil_temperature_60cm
        - solar_irradiance_copernicus
      title: CreateData
    CreateParcel:
      properties:
        name:
          type: string
          title: Name
        latitude:
          type: number
          title: Latitude
        longitude:
          type: number
          title: Longitude
      type: object
      required:
        - name
        - latitude
        - longitude
      title: CreateParcel
    CreatePestModel:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        geo_areas_of_application:
          anyOf:
            - type: string
            - type: 'null'
          title: Geo Areas Of Application
        cultivations:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Cultivations
      type: object
      required:
        - name
        - description
        - geo_areas_of_application
        - cultivations
      title: CreatePestModel
    CreateRuleWithConditions:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        probability_value:
          type: string
          enum:
            - low
            - moderate
            - high
          title: Probability Value
        pest_model_id:
          type: string
          format: uuid4
          title: Pest Model Id
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          type: array
          title: Conditions
          default: []
      type: object
      required:
        - name
        - probability_value
        - pest_model_id
      title: CreateRuleWithConditions
    DataDB:
      properties:
        date:
          type: string
          format: date
          title: Date
        time:
          type: string
          format: time
          title: Time
        atmospheric_temperature:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Temperature
        atmospheric_temperature_daily_min:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Temperature Daily Min
        atmospheric_temperature_daily_max:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Temperature Daily Max
        atmospheric_temperature_daily_average:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Temperature Daily Average
        atmospheric_relative_humidity:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Relative Humidity
        atmospheric_pressure:
          anyOf:
            - type: number
            - type: 'null'
          title: Atmospheric Pressure
        precipitation:
          anyOf:
            - type: number
            - type: 'null'
          title: Precipitation
        average_wind_speed:
          anyOf:
            - type: number
            - type: 'null'
          title: Average Wind Speed
        wind_direction:
          anyOf:
            - type: string
            - type: 'null'
          title: Wind Direction
        wind_gust:
          anyOf:
            - type: number
            - type: 'null'
          title: Wind Gust
        leaf_relative_humidity:
          anyOf:
            - type: number
            - type: 'null'
          title: Leaf Relative Humidity
        leaf_temperature:
          anyOf:
            - type: number
            - type: 'null'
          title: Leaf Temperature
        leaf_wetness:
          anyOf:
            - type: number
            - type: 'null'
          title: Leaf Wetness
        soil_temperature_10cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 10Cm
        soil_temperature_20cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 20Cm
        soil_temperature_30cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 30Cm
        soil_temperature_40cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 40Cm
        soil_temperature_50cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 50Cm
        soil_temperature_60cm:
          anyOf:
            - type: number
            - type: 'null'
          title: Soil Temperature 60Cm
        solar_irradiance_copernicus:
          anyOf:
            - type: number
            - type: 'null'
          title: Solar Irradiance Copernicus
        id:
          type: integer
          title: Id
      type: object
      required:
        - date
        - time
        - atmospheric_temperature
        - atmospheric_temperature_daily_min
        - atmospheric_temperature_daily_max
        - atmospheric_temperature_daily_average
        - atmospheric_relative_humidity
        - atmospheric_pressure
        - precipitation
        - average_wind_speed
        - wind_direction
        - wind_gust
        - leaf_relative_humidity
        - leaf_temperature
        - leaf_wetness
        - soil_temperature_10cm
        - soil_temperature_20cm
        - soil_temperature_30cm
        - soil_temperature_40cm
        - soil_temperature_50cm
        - soil_temperature_60cm
        - solar_irradiance_copernicus
        - id
      title: DataDB
    DiseaseDB:
      properties:
        id:
          type: string
          format: uuid4
          title: Id
        name:
          type: string
          title: Name
        eppo_code:
          type: string
          title: Eppo Code
        base_gdd:
          type: integer
          title: Base Gdd
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        gdd_points:
          items:
            $ref: '#/components/schemas/GDDIntervalDB'
          type: array
          title: Gdd Points
      type: object
      required:
        - id
        - name
        - eppo_code
        - base_gdd
        - description
        - gdd_points
      title: DiseaseDB
    DiseaseModel:
      properties:
        name:
          type: string
          title: Name
        eppo_code:
          type: string
          title: Eppo Code
        base_gdd:
          type: integer
          title: Base Gdd
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        gdd_values:
          items:
            $ref: '#/components/schemas/GDDResponseChunk'
          type: array
          title: Gdd Values
      type: object
      required:
        - name
        - eppo_code
        - base_gdd
        - description
        - gdd_values
      title: DiseaseModel
    GDDIntervalDB:
      properties:
        id:
          type: integer
          title: Id
        start:
          type: integer
          title: Start
        end:
          type: integer
          title: End
        descriptor:
          type: string
          title: Descriptor
      type: object
      required:
        - id
        - start
        - end
        - descriptor
      title: GDDIntervalDB
    GDDIntervalInput:
      properties:
        start:
          type: integer
          title: Start
        end:
          type: integer
          title: End
        descriptor:
          type: string
          title: Descriptor
      type: object
      required:
        - start
        - end
        - descriptor
      title: GDDIntervalInput
    GDDResponse:
      properties:
        models:
          items:
            $ref: '#/components/schemas/DiseaseModel'
          type: array
          title: Models
      type: object
      required:
        - models
      title: GDDResponse
    GDDResponseChunk:
      properties:
        date:
          type: string
          format: date
          title: Date
        gdd_value:
          type: integer
          title: Gdd Value
        accumulated_gdd:
          type: integer
          title: Accumulated Gdd
        descriptor:
          type: string
          title: Descriptor
      type: object
      required:
        - date
        - gdd_value
        - accumulated_gdd
        - descriptor
      title: GDDResponseChunk
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    InputDisease:
      properties:
        name:
          type: string
          title: Name
        eppo_code:
          type: string
          title: Eppo Code
        base_gdd:
          type: integer
          title: Base Gdd
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        gdd_points:
          items:
            $ref: '#/components/schemas/GDDIntervalInput'
          type: array
          minItems: 1
          title: Gdd Points
      type: object
      required:
        - name
        - eppo_code
        - base_gdd
        - description
        - gdd_points
      title: InputDisease
    ListData:
      properties:
        list_of_data:
          items:
            $ref: '#/components/schemas/DataDB'
          type: array
          title: List Of Data
      type: object
      required:
        - list_of_data
      title: ListData
    ListDisease:
      properties:
        diseases:
          items:
            $ref: '#/components/schemas/DiseaseDB'
          type: array
          title: Diseases
      type: object
      required:
        - diseases
      title: ListDisease
    Message:
      properties:
        message:
          type: string
          title: Message
      type: object
      required:
        - message
      title: Message
    OperatorDB:
      properties:
        id:
          type: integer
          title: Id
        symbol:
          type: string
          title: Symbol
      type: object
      required:
        - id
        - symbol
      title: OperatorDB
    Operators:
      properties:
        operators:
          items:
            $ref: '#/components/schemas/OperatorDB'
          type: array
          title: Operators
      type: object
      required:
        - operators
      title: Operators
    ParcelDB:
      properties:
        name:
          type: string
          title: Name
        latitude:
          type: number
          title: Latitude
        longitude:
          type: number
          title: Longitude
        id:
          type: integer
          title: Id
      type: object
      required:
        - name
        - latitude
        - longitude
        - id
      title: ParcelDB
    ParcelWKT:
      properties:
        name:
          type: string
          title: Name
        wkt_polygon:
          type: string
          title: Wkt Polygon
      type: object
      required:
        - name
        - wkt_polygon
      title: ParcelWKT
    Parcels:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ParcelDB'
          type: array
          title: Elements
      type: object
      required:
        - elements
      title: Parcels
    PestModelDB:
      properties:
        id:
          type: string
          format: uuid4
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        geo_areas_of_application:
          anyOf:
            - type: string
            - type: 'null'
          title: Geo Areas Of Application
      type: object
      required:
        - id
        - name
        - description
        - geo_areas_of_application
      title: PestModelDB
    PestModels:
      properties:
        pests:
          items:
            $ref: '#/components/schemas/PestModelDB'
          type: array
          title: Pests
      type: object
      required:
        - pests
      title: PestModels
    RuleDB:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          type: array
          title: Conditions
      type: object
      required:
        - id
        - name
        - description
        - conditions
      title: RuleDB
    RulesDB:
      properties:
        rules:
          items:
            $ref: '#/components/schemas/RuleDB'
          type: array
          title: Rules
          default: []
      type: object
      title: RulesDB
    Token:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
      type: object
      required:
        - access_token
        - token_type
      title: Token
    Unit:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        symbol:
          type: string
          title: Symbol
      type: object
      required:
        - id
        - name
        - symbol
      title: Unit
    UnitCreate:
      properties:
        name:
          type: string
          title: Name
        symbol:
          type: string
          title: Symbol
      type: object
      required:
        - name
        - symbol
      title: UnitCreate
    UnitDelete:
      properties:
        id:
          type: integer
          title: Id
      type: object
      required:
        - id
      title: UnitDelete
    Units:
      properties:
        units:
          items:
            $ref: '#/components/schemas/Unit'
          type: array
          title: Units
      type: object
      required:
        - units
      title: Units
    UserCreate:
      properties:
        email:
          type: string
          title: Email
        password:
          type: string
          title: Password
      type: object
      required:
        - email
        - password
      title: UserCreate
    UserMe:
      properties:
        email:
          type: string
          title: Email
      type: object
      required:
        - email
      title: UserMe
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: /api/v1/login/access-token/
